printf "Tempo de Execucao: %f minutos \n", _solve_elapsed_time/60 >> saidas\saidas_funcoes_objetivo.txt;
printf "Consumo de Energia (Sem Tarifa Branca): %4f.\n", fo_consumo_sem_tarifa >> saidas\saidas_funcoes_objetivo.txt;
printf "Consumo de Energia (Com Tarifa Branca): %4f.\n", fo_consumo_com_tarifa >> saidas\saidas_funcoes_objetivo.txt;
printf "Consumo de Energia dos ACs: %4f.\n", fo_consumo_ac >> saidas\saidas_funcoes_objetivo.txt;
printf "Desconforto TÃ©rmico dos UsuÃ¡rios: %4f.\n",  (sum{x in AC, t in Ot}abs(Tin[x,t,1] - Tset_casa[x] * AC_Fase_a[x])/card(Ot) +
													 sum{x in AC, t in Ot}abs(Tin[x,t,2] - Tset_casa[x] * AC_Fase_b[x])/card(Ot) +
													 sum{x in AC, t in Ot}abs(Tin[x,t,3] - Tset_casa[x] * AC_Fase_c[x])/card(Ot)
													)/card(AC)  >> saidas\saidas_funcoes_objetivo.txt;
printf "----------------------------------------------------------------------------\n" >> saidas\saidas_funcoes_objetivo.txt;
printf "----------------------------------------------------------------------------\n\n" >> saidas\saidas_funcoes_objetivo.txt;

# Mostra os resultados 
printf "Magnitudes de Tensao:" >> saidas\saida_Magnitudes_de_tensao.xls;
printf "\n" >> saidas\saida_Magnitudes_de_tensao.xls;
for {t in Ot}{
	printf "Tempo %2d:\n", t >> saidas\saida_Magnitudes_de_tensao.xls;
	printf "No \tFase A \tFase B \tFase C\n" >> saidas\saida_Magnitudes_de_tensao.xls;
	for {k in Ob}{
		if (Nivel_b[k] == 1) then {
			printf "%3d -> \t%6.4f \t%6.4f \t%6.4f", k, sqrt(Vra[k,t]^2 + Via[k,t]^2)/(24.9/sqrt(3)), sqrt(Vrb[k,t]^2 + Vib[k,t]^2)/(24.9/sqrt(3)), sqrt(Vrc[k,t]^2 + Vic[k,t]^2)/(24.9/sqrt(3)) >> saidas\saida_Magnitudes_de_tensao.xls;
			printf "\n" >> saidas\saida_Magnitudes_de_tensao.xls;
		}
		if (Nivel_b[k] == 2) then {
			printf "%3d -> \t%6.4f \t%6.4f \t%6.4f", k, sqrt(Vra[k,t]^2 + Via[k,t]^2)/(0.480/sqrt(3)), sqrt(Vrb[k,t]^2 + Vib[k,t]^2)/(0.480/sqrt(3)), sqrt(Vrc[k,t]^2 + Vic[k,t]^2)/(0.480/sqrt(3)) >> saidas\saida_Magnitudes_de_tensao.xls;
			printf "\n" >> saidas\saida_Magnitudes_de_tensao.xls;
		}
	}
	printf "\n" >> saidas\saida_Magnitudes_de_tensao.xls;
}

 printf "Magnitudes de Corrente:" >> saidas\saida_Magnitudes_de_corrente.xls;
 printf "\n" >> saidas\saida_Magnitudes_de_corrente.xls;
 for {t in Ot}{
 	printf "Tempo %2d:\n", t >> saidas\saida_Magnitudes_de_corrente.xls;
 	printf "Ramo \tFase A \tFase B \tFase C\n" >> saidas\saida_Magnitudes_de_corrente.xls;
 	for {(i,j) in Ol}{
 		printf "%3d-%3d -> \t%6.2f \t%6.2f \t%6.2f", i, j, sqrt(Ira[i,j,t]^2 + Iia[i,j,t]^2), sqrt(Irb[i,j,t]^2 + Iib[i,j,t]^2), sqrt(Irc[i,j,t]^2 + Iic[i,j,t]^2) >> saidas\saida_Magnitudes_de_corrente.xls;
 		printf "\n" >> saidas\saida_Magnitudes_de_corrente.xls;
 	}
 	printf "\n" >> saidas\saida_Magnitudes_de_corrente.xls;
 }
 
 printf "Correntes de carga:" >> saidas\saida_Magnitudes_de_corrente_de_carga.xls;
 printf "\n" >> saidas\saida_Magnitudes_de_corrente_de_carga.xls;
 for {t in Ot}{
 	printf "Tempo %2d:\n", t >> saidas\saida_Magnitudes_de_corrente_de_carga.xls;
 	printf "No \tFase A \tFase B \tFase C\n" >> saidas\saida_Magnitudes_de_corrente_de_carga.xls;
 	for {k in Ob}{
 		printf "%3d -> \t%6.4f \t%6.4f \t%6.4f", k, sqrt(IDra[k,t]^2 + IDia[k,t]^2), sqrt(IDrb[k,t]^2 + IDib[k,t]^2), sqrt(IDrc[k,t]^2 + IDic[k,t]^2) >> saidas\saida_Magnitudes_de_corrente_de_carga.xls;
 		printf "\n" >> saidas\saida_Magnitudes_de_corrente_de_carga.xls;
 	}
 	printf "\n" >> saidas\saida_Magnitudes_de_corrente_de_carga.xls;
 }

 printf "ACs:" >> saidas\saida_Magnitudes_de_corrente_ac.xls;
 printf "\n" >> saidas\saida_Magnitudes_de_corrente_ac.xls;
 for {t in Ot}{
 	printf "Tempo %2d:\n", t >> saidas\saida_Magnitudes_de_corrente_ac.xls;
 	printf "AC Correntes \tFase A \tFase B \tFase C\n" >> saidas\saida_Magnitudes_de_corrente_ac.xls;
 	for {w in AC}{
 		printf "%3d -> \t\t%6.4f \t%6.4f \t%6.4f", w, sqrt(Iac_re_a[w,t]^2 + Iac_im_a[w,t]^2), sqrt(Iac_re_b[w,t]^2 + Iac_im_b[w,t]^2), sqrt(Iac_re_c[w,t]^2 + Iac_im_c[w,t]^2) >> saidas\saida_Magnitudes_de_corrente_ac.xls;
 		printf "\n" >> saidas\saida_Magnitudes_de_corrente_ac.xls;
 	}
}

 printf "COP ACs:" >> saidas\saida_COP.xls;
 for {f in Of}{
 printf "\n\n Fase: " >> saidas\saida_COP.xls;
 printf "%i	 \n", f >> saidas\saida_COP.xls;
 printf "\t" >> saidas\saida_COP.xls;

	for {w in AC}{
		printf "%i", w >> saidas\saida_COP.xls;
		printf "\t" >> saidas\saida_COP.xls;	
		}
			for {t in Ot}{
			printf "\n %i \t", t >> saidas\saida_COP.xls;	
				for {w in AC}{
					if (Pac[w,t,f] == 0) then {
					printf "0" >> saidas\saida_COP.xls;
					printf "\t" >> saidas\saida_COP.xls;
					}
					else{
					printf "%6.4f", Qac[w,t,f]/Pac[w,t,f] >> saidas\saida_COP.xls;
					printf "\t" >> saidas\saida_COP.xls;
					}
		}
	}
}

# ACs
display Pac>saidas\saida_Pac.xls;
display frequency_ac>saidas\saida_frequency_ac.xls;
display Tin>saidas\saida_Tin.xls;
display Tparede>saidas\saida_Tparede.xls;
display desconforto>saidas\saida_desconforto.xls;
display Qac>saidas\saida_Qac.xls;
display on_off>saidas\saida_ON_OFF.xls;

display mod_Pac_freq>saidas\saida_mod_Pac_freq.xls;
display mod_Qac_freq>saidas\saida_mod_Qac_freq.xls;

option display_width 20;

display Tout>saidas\saida_Tout.xls;
display mod_Pac_Tout>saidas\saida_mod_Pac_Tout.xls;
display mod_Qac_Tout>saidas\saida_mod_Qac_Tout.xls;

option display_width 1000;

# Baterias
display carga_bateria>saidas\saida_carga_bateria.xls;
display pot_bateria>saidas\saida_pot_bateria.xls;

# PFVs
display pot_pfv>saidas\saida_pot_pfv.xls;

# SE
display ISra>saidas\saida_ISra.xls;
display ISia>saidas\saida_ISia.xls;
display ISrb>saidas\saida_ISrb.xls;
display ISib>saidas\saida_ISib.xls;
display ISrc>saidas\saida_ISrc.xls;
display ISic>saidas\saida_ISic.xls;

display Isqra>saidas\saida_Isqra.xls;
display Ira>saidas\saida_Ira.xls;